import * as React from 'react';

interface Margin {
    m?: string;
    mx?: string;
    my?: string;
    mt?: string;
    mr?: string;
    mb?: string;
    ml?: string;
}

interface HeadingOwnProps {
}
declare const Heading: React.ForwardRefExoticComponent<(Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as?: "h1" | undefined;
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin> | Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as: "h2";
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin> | Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as: "h3";
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin> | Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as: "h4";
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin> | Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as: "h5";
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin> | Pick<Readonly<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement>> & {
    ref?: ((instance: HTMLHeadingElement | null) => void) | React.RefObject<HTMLHeadingElement> | null | undefined;
} & {
    as: "h6";
} & HeadingOwnProps & Margin>, "key" | keyof React.HTMLAttributes<HTMLHeadingElement> | "as" | keyof Margin>) & React.RefAttributes<HTMLHeadingElement>>;

export { Heading };
