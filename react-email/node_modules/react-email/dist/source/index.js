#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const extra_typings_1 = require("@commander-js/extra-typings");
const dev_1 = require("./commands/dev");
const preview_1 = require("./commands/preview");
const export_1 = require("./commands/export");
const constants_1 = require("./utils/constants");
const package_json_1 = __importDefault(require("../package.json"));
extra_typings_1.program
    .name(constants_1.PACKAGE_NAME)
    .description('A live preview of your emails right in your browser')
    .version(package_json_1.default.version);
extra_typings_1.program
    .command('dev')
    .description('Starts the application in development mode')
    .option('-d, --dir <path>', 'Directory with your email templates', './emails')
    .option('-p --port <port>', 'Port to run dev server on', '3000')
    .action(dev_1.dev);
extra_typings_1.program
    .command('build')
    .description('Builds a production preview app')
    .option('-d, --dir <path>', 'Directory with your email templates', './emails')
    .action(preview_1.buildPreview);
extra_typings_1.program
    .command('start')
    .description('Starts the production build of the preview app')
    .option('-p --port <port>', 'Port to run production server on', '3000')
    .action(preview_1.startPreview);
extra_typings_1.program
    .command('export')
    .description('Build the templates to the `out` directory')
    .option('--outDir <path>', 'Output directory', 'out')
    .option('-p, --pretty', 'Pretty print the output', false)
    .option('-t, --plainText', 'Set output format as plain text', false)
    .option('-d, --dir <path>', 'Directory with your email templates', './emails')
    .action(({ outDir, pretty, plainText, dir: srcDir }) => (0, export_1.exportTemplates)(outDir, srcDir, { pretty, plainText }));
extra_typings_1.program.parse();
